# name: CI

# on:
#   push:
#     branches: [main]
#   pull_request:
#     branches: [main]

# concurrency:
#   group: ${{ github.workflow }}-${{ github.ref }}
#   cancel-in-progress: true

# env:
#   CI: true
#   NODE_OPTIONS: --max-old-space-size=4096

# jobs:
#   lint-and-format:
#     name: Lint and Format Check
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20'
#           cache: 'npm'

#       - name: Install dependencies
#         run: npm ci

#       - name: Run ESLint
#         run: npm run lint

#       - name: Check Prettier formatting
#         run: npm run format:check

#   type-check:
#     name: TypeScript Type Check
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20'
#           cache: 'npm'

#       - name: Install dependencies
#         run: npm ci

#       - name: Run TypeScript type check
#         run: npx tsc --noEmit

#   security-audit:
#     name: Security Audit
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20'
#           cache: 'npm'

#       - name: Install dependencies
#         run: npm ci

#       - name: Run security audit
#         run: npm audit --audit-level=moderate

#   build:
#     name: Build Application
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20'
#           cache: 'npm'

#       - name: Install dependencies
#         run: npm ci

#       - name: Cache Next.js build
#         uses: actions/cache@v3
#         with:
#           path: |
#             ~/.npm
#             ${{ github.workspace }}/.next/cache
#           key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx') }}
#           restore-keys: |
#             ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

#       - name: Build application
#         run: npm run build

#   test-unit:
#     name: Unit Tests (Vitest)
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20'
#           cache: 'npm'

#       - name: Install dependencies
#         run: npm ci

#       - name: Run unit tests
#         run: npm run test:run

#       - name: Generate coverage report
#         run: npm run test:coverage

#       - name: Upload coverage to artifact
#         uses: actions/upload-artifact@v4
#         if: always()
#         with:
#           name: coverage-report
#           path: coverage/
#           retention-days: 30

#       - name: Upload test results
#         uses: actions/upload-artifact@v4
#         if: always()
#         with:
#           name: unit-test-results
#           path: test-results.xml
#           retention-days: 30

#   test-storybook:
#     name: Component Tests (Storybook)
#     runs-on: ubuntu-latest
#     timeout-minutes: 10

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20'
#           cache: 'npm'

#       - name: Install dependencies
#         run: npm ci

#       - name: Cache Playwright browsers
#         uses: actions/cache@v3
#         id: playwright-cache
#         with:
#           path: ~/.cache/ms-playwright
#           key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-playwright-

#       - name: Install Playwright browsers and dependencies
#         if: steps.playwright-cache.outputs.cache-hit != 'true'
#         run: npx playwright install --with-deps

#       - name: Build Storybook
#         run: npm run build-storybook

#       - name: Serve Storybook and run tests
#         run: npm run test:storybook:ci

#       - name: Upload Storybook build
#         uses: actions/upload-artifact@v4
#         if: always()
#         with:
#           name: storybook-static
#           path: storybook-static/
#           retention-days: 30

#       - name: Upload Storybook test results
#         uses: actions/upload-artifact@v4
#         if: failure()
#         with:
#           name: storybook-test-results
#           path: test-results/
#           retention-days: 30
